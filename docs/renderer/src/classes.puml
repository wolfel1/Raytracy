@startuml renderer_classes
class Scene
Scene : object_indices: int[]
Scene : -Scene()
Scene : +Get()
Scene : +AddCamera(camera: PerspectiveCamera)
Scene : +AddMesh()
Scene : -BuildBoundingVolumeHierarchie()

Scene --> "1" PerspectiveCamera
Scene --> "0..*" Mesh

class PerspectiveCamera

struct BoundingBoxNode
BoundingBoxNode : +min_corner: vec3
BoundingBoxNode : +max_corner: vec3
BoundingBoxNode : +left_child_index: int
BoundingBoxNode : +object_count: int

Scene --> "1..*" BoundingBoxNode

abstract Mesh
Mesh : -model_matrix: mat4
Mesh : -origin: vec3
Mesh : -scale: float
Mesh : +Mesh()
Mesh : +Mesh(position: vec3, scale_factor: float)
Mesh : +\~Mesh()
Mesh : +Translate(direction: vec3)
Mesh : +Scale(value float)
Mesh : #Init(): void

class Triangle
Triangle : -vertex0: Vertex
Triangle : -vertex1: Vertex
Triangle : -vertex2: Vertex
Triangle : -normal: vec3
Triangle : +Triangle(vertex0: Vertex, vertex1: Vertex, vertex2: Vertex)

Mesh --> "*" Triangle

class Plane
Plane : +Plane()
Plane : +Plane(position: vec3, scale_factor: float)
Plane : +\~Plane()

class Cube
Cube : +Cube()
Cube : +Cube(position: vec3, scale_factor: float)
Cube : +\~Cube()

class Sphere
Sphere : -radius: float
Sphere : +Sphere()
Sphere : +Sphere(position: vec3, radius: float, scale_factor: float)
Sphere : +\~Sphere()

struct MeshData

struct PlaneData

struct CubeData

struct SphereData

struct BufferElement

class BufferLayout
BufferLayout : AddElement(element: BufferElement)

struct UniformBlock
UniformBlock : +name: string
UniformBlock : +uniform_names: string[]

BufferLayout "#elements" --> "0..*" BufferElement

class UniformBuffer

class DirectionalLight
DirectionalLight : -light_color: vec3 = {1.0, 1.0, 1.0}
DirectionalLight : -light_direction: vec3 = {0.0, 1.0, 0.0}
DirectionalLight : -light_strength: float = 1.0
DirectionalLight : +DirectionalLight()
DirectionalLight : +DirectionalLight(color: vec3, direction: vec3)
DirectionalLight : +SetStrength(value: float) 0.0 < value < 1.0

class Material
Material : color

Material --> "1" Shader
Material "-material_uniform_buffer" --> "1" UniformBuffer

Mesh --> "1" MeshData
Mesh --> "1" Material
MeshData <|-- PlaneData
MeshData <|-- CubeData
MeshData <|-- SphereData

Mesh <|-- Plane
Mesh <|-- Cube
Mesh <|-- Sphere
@enduml